apiVersion: v1
kind: Service
metadata:
  name: shopapp-spring-service
  #kubectl get service shopapp-spring-service
  #expose a service:
  #minikube service shopapp-spring-service --url  
  labels:
    app: shopapp
spec:
  ports:
  - name: 8088-8088
    port: 8088
    protocol: TCP
    targetPort: 8088
    nodePort: 30080 #external port(> 30000), use with LoadBalancer
  selector:
    app: shopapp
    tier: backend
  #type: LoadBalancer
  #type: ClusterIP #to use with Ingress
  type: NodePort
      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shopapp-spring-deployment
  labels:
    app: shopapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shopapp
      tier: backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: shopapp
        tier: backend
    spec:
      imagePullSecrets: 
      - name: shopapp-spring-image-secret
      containers:
        #must be in Docker Hub(GCR, OCR,...), must authenticate
      - image: docker.io/sunlight4d/shopapp-spring:1.0.1 
        name: shopapp-spring-container                  
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://mysql-db-service:3306/ShopApp?serverTimezone=UTC&allowPublicKeyRetrieval=true       
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_ROOT_PASSWORD        
        ports:
        - containerPort: 8088 #expose
          name: shopapp